"""empty message

Revision ID: 7a72075eddff
Revises: b23772ae576d
Create Date: 2025-09-05 06:52:04.342646

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op


# revision identifiers, used by Alembic.
revision: str = "7a72075eddff"
down_revision: Union[str, Sequence[str], None] = "b23772ae576d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("offer_executors")
    op.alter_column("offers", "telegram_channel_url", existing_type=sa.VARCHAR(length=256), nullable=False)
    op.alter_column(
        "offers",
        "type",
        existing_type=postgresql.ENUM("UNDEFINED", "NEWS", "VACANCIES", name="offertype"),
        nullable=False,
    )
    op.sync_enum_values(
        "public", "offertype", ["NEWS", "UNDEFINED", "VACANCIES"], ["NEWS", "VACANCIES"], [("offers", "type")], False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        "public", "offertype", ["NEWS", "VACANCIES"], ["NEWS", "UNDEFINED", "VACANCIES"], [("offers", "type")], True
    )
    op.alter_column(
        "offers",
        "type",
        existing_type=postgresql.ENUM("UNDEFINED", "NEWS", "VACANCIES", name="offertype"),
        nullable=True,
    )
    op.alter_column("offers", "telegram_channel_url", existing_type=sa.VARCHAR(length=256), nullable=True)
    op.create_table(
        "offer_executors",
        sa.Column("offer_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["offer_id"], ["offers.id"], name=op.f("offer_executors_offer_id_fkey")),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name=op.f("offer_executors_user_id_fkey")),
        sa.PrimaryKeyConstraint("offer_id", "user_id", name=op.f("offer_executors_pkey")),
    )
    # ### end Alembic commands ###
