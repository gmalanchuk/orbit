from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from src.keyboards.start import start_keyboard
from src.services.user import UserService


start_router = Router()


@start_router.message(CommandStart())
async def start_command(message: Message, state: FSMContext):
    if message.text == "/start":  # todo —ç—Ç–∞ —à—Ç—É–∫–∞ –Ω—É–∂–Ω–∞ —á—Ç–æ–±—ã –Ω–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–ª–æ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –ø–æ –∫–Ω–æ–ø–∫–µ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        user_service = UserService()
        user = await user_service.get_user(telegram_user_id=message.from_user.id)
        if not user:
            await user_service.create_user(telegram_user_id=message.from_user.id)
        else:
            await state.clear()
    await message.answer(
        text=(
            "–ü—Ä–∏–≤—ñ—Ç!üëã\n"
            "–Ø –±–æ—Ç –¥–ª—è –ø–æ—à—É–∫—É –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤ –∑ –£–ë–¢-—Ç—Ä–∞—Ñ—ñ–∫—É.\n\n"
            "üöÄ–î–æ–ø–æ–º–∞–≥–∞—é —Ç—Ä–∞—Ñ–µ—Ä–∞–º –ª–µ–≥–∫–æ –∑–Ω–∞—Ö–æ–¥–∏—Ç–∏ —Ü—ñ–∫–∞–≤—ñ –æ—Ñ–µ—Ä–∏, –∞ –∞–¥–º—ñ–Ω–∞–º - —à–≤–∏–¥–∫–æ —ó—Ö —Ä–æ–∑–º—ñ—â—É–≤–∞—Ç–∏.\n"
            "–©–æ–± –ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É, –æ–±–µ—Ä—ñ—Ç—å —Å–≤–æ—é —Ä–æ–ª—å –Ω–∏–∂—á–µ:"
        ),
        reply_markup=start_keyboard,
    )
